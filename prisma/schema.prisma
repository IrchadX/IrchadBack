generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model user {
  id                   Int                    @id @default(autoincrement())
  created_at           DateTime               @default(now()) @db.Timestamptz(6)
  family_name          String?                @db.VarChar
  first_name           String?                @db.VarChar
  phone_number         String?                @db.VarChar
  password             String?                @db.VarChar
  userTypeId           Int?
  email                String?                @unique @db.VarChar
  sex                  String?                @db.VarChar
  street               String?                @db.VarChar
  city                 String?                @db.VarChar
  birth_date           DateTime?
  device               device[]
  environment          environment[]
  intervention_history intervention_history[]
  userType             user_type?             @relation(fields: [userTypeId], references: [id])
}

model user_type {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamptz(6)
  type       String?  @db.VarChar
  user       user[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model alert {
  id        Int      @id @default(autoincrement())
  type      String
  time      DateTime @db.Time(6)
  date      DateTime @db.Date
  zone      String
  status    String
  device_id Int
  level     String
  device    device   @relation(fields: [device_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model device {
  id                   Int                    @id @default(autoincrement())
  type_id              Int
  state_type_id        Int
  user_id              Int
  mac_address          String                 @unique @db.VarChar(17)
  software_version     String?                @db.VarChar(50)
  comm_state           String
  connection_state     String
  date_of_service      DateTime               @db.Date
  battery_level        Int?                   @db.SmallInt
  alert                alert[]
  state_type           state_type             @relation(fields: [state_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  device_type          device_type            @relation(fields: [type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user                 user                   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  intervention_history intervention_history[]
}

model device_type {
  id     Int      @id @default(autoincrement())
  type   String   @unique @db.VarChar(100)
  device device[]
}

model state_type {
  id     Int      @id @default(autoincrement())
  state  String   @unique @db.VarChar(50)
  device device[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model intervention_history {
  id               Int       @id @default(autoincrement())
  device_id        Int?
  maintenancier_id Int?
  scheduled_date   DateTime  @db.Timestamp(6)
  completion_date  DateTime? @db.Timestamp(6)
  description      String?
  type             String?
  status           String?
  device           device?   @relation(fields: [device_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user             user?     @relation(fields: [maintenancier_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model env_delimiter {
  id          BigInt   @id @default(autoincrement())
  created_at  DateTime @default(now()) @db.Timestamptz(6)
  env_id      Int?
  coordinates Json?    @db.Json
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model environment {
  id         BigInt   @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamptz(6)
  name       String?  @db.VarChar
  address    String?  @db.VarChar
  user_id    Int?
  is_public  Boolean? @default(false)
  user       user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model poi {
  id          BigInt   @id @default(autoincrement())
  created_at  DateTime @default(now()) @db.Timestamptz(6)
  zone_id     Int?
  name        String?  @db.VarChar
  description String?  @db.VarChar
  category_id Int?
  coordinates Json?    @db.Json
  env_id      Int?
  image_url   String?  @db.VarChar
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model poi_category {
  id         BigInt   @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamptz(6)
  category   String?  @db.VarChar
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model zone {
  id             BigInt   @id @default(autoincrement())
  created_at     DateTime @default(now()) @db.Timestamptz(6)
  environment_id Int?
  name           String?  @db.VarChar
  description    String?  @db.VarChar
  type_id        Int?
  coordinates    Json?    @db.Json
}
